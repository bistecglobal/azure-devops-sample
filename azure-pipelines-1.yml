# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


trigger:
- main

stages:
  - stage: Build
    displayName: Build Stage
    jobs:
      - job: BuildAPI
        displayName: Build API Job
        pool:
          vmImage: ubuntu-latest

        steps:
        - task: UseDotNet@2
          displayName: Install .net 6
          inputs:
            packageType: sdk
            version: 6.0.x        
          
        - task: DotNetCoreCLI@2
          displayName: Build .Net
          inputs:
            command: 'build'
            projects: '**/*.csproj'
            
        - task: DotNetCoreCLI@2
          displayName: Test .Net
          inputs:
            command: 'test'
            projects: '**/*.tests.csproj'
            arguments: "/p:CollectCoverage=true /p:CoverletOutputFormat=opencover"        
            
      - job: BuildUI
        displayName: Build UI
        pool:
          vmImage: ubuntu-latest

        steps:
        - task: UseNode@1
          displayName: Install Node
          inputs:
           version: 14.x    

        - task: Npm@1
          displayName: Install node modules
          inputs:
            command: 'install'
            workingDir: 'client'
            
        - task: Npm@1
          displayName: Build UI
          inputs:
            customCommand: 'build'
            workingDir: 'client'

  - stage: Deploy
    displayName: Deploy Stage
    jobs:
      - job: Deploy
        displayName: Deploy Job
        pool:
          vmImage: ubuntu-latest

        steps:
        - task: AzureResourceManagerTemplateDeployment@3
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'MPN'
            subscriptionId: 'f31e1ef4-3413-4efa-9e74-9ce83c808c57'
            action: 'Create Or Update Resource Group'
            resourceGroupName: 'QualityCircle-Demo'
            location: 'Central US'
            templateLocation: 'Linked artifact'
            csmFile: 'templates/template.json'
            csmParametersFile: 'templates/parameters.json'
            deploymentMode: 'Incremental'
          