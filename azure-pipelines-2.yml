# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

stages:
  - stage: "Build"
    jobs:
      - job: BuildAPI
        pool:
          vmImage: ubuntu-latest

        steps:
        - script: echo Hello, world!
          displayName: 'Run a one-line script'

        - script: |
            echo Add other tasks to build, test, and deploy your project.
            echo See https://aka.ms/yaml
          displayName: 'Run a multi-line script'

        - task: UseDotNet@2
          inputs:
            version: 6.0.x
            packageType: sdk

        - task: DotNetCoreCLI@2
          inputs:
            command: 'build'
            projects: '**/*.csproj'
           
        - task: DotNetCoreCLI@2
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '*/*.csproj'
            arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/Release'
            
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

      - job: BuildUI
        pool:
          vmImage: ubuntu-latest

        steps:
           
        - task: UseNode@1
          inputs:
            version: 14.x
          
        - task: Npm@1
          inputs:
            command: 'custom'
            workingDir: 'client'
            customCommand: 'build'

  - stage: "Deploy"
    jobs:       
      - job: BuildUI
        pool:
          vmImage: ubuntu-latest

        steps:
        
        - download: current
          artifact: drop

        - task: AzureResourceManagerTemplateDeployment@3
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'MPN'
            subscriptionId: 'f31e1ef4-3413-4efa-9e74-9ce83c808c57'
            action: 'Create Or Update Resource Group'
            resourceGroupName: 'QualityCircle-Demo'
            location: 'Central US'
            templateLocation: 'Linked artifact'
            csmFile: 'templates/template.json'
            csmParametersFile: 'templates/parameters.json'
            deploymentMode: 'Incremental'
          
        - task: AzureRmWebAppDeployment@4
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'MPN'
            appType: 'webAppLinux'
            WebAppName: 'quality-circle-api'
            packageForLinux: '$(Pipeline.Workspace)/drop/Release/api.zip'
